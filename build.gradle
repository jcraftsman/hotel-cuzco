plugins {
    id 'java'
    id 'io.franzbecker.gradle-lombok' version '1.14'
    id 'application'
}

lombok {
    version = '1.18.2'
    sha256 = ""
}

ext {
    assertJVersion = '3.10.0'
    jacksonVersion = '2.9.7'
    jedisVersion = '2.9.0'
    junitVersion = '5.3.1'
    logbackVersion = '1.3.0-alpha4'
    minimalJsonVersion = '0.9.5'
    mockitoVersion = '2.+'
    restAssuredVersion = '3.1.1'
    sparkjavaVersion = '2.7.2'
}

group 'hotel-cuzco'
version '1.0-SNAPSHOT'

sourceCompatibility = 10

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'com.sparkjava', name: 'spark-core', version: sparkjavaVersion
    compile group: 'com.eclipsesource.minimal-json', name: 'minimal-json', version: minimalJsonVersion
    compile group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion
    compile group: 'redis.clients', name: 'jedis', version: jedisVersion

    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitVersion
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitVersion

    testCompile group: 'io.rest-assured', name: 'rest-assured', version: restAssuredVersion
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: junitVersion
    testCompile group: 'org.assertj', name: 'assertj-core', version: assertJVersion
    testCompile group: 'org.mockito', name: 'mockito-core', version: mockitoVersion
    testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: mockitoVersion
}

test {
    useJUnitPlatform()
}

mainClassName = "hotel.cuzco.Application"

task stage {
    dependsOn installDist
}

// The run task added by the application plugin
// is also of type JavaExec.
tasks.withType(JavaExec) {
    if (project.hasProperty("dev")) {
         environment SENDER_EMAIL: 'booking.hotel.cuzco@gmail.com'
         environment MAIL_TRANSFER_PROTOCOL: 'smtp'
         environment SMTP_HOST: 'localhost'
         environment SMTP_PORT: '2525'
         environment SMTP_USER: 'any'
         environment SMTP_PASSWORD: 'whatever'
         environment REDIS_URL: 'redis://localhost:6379'
         environment PORT: '9986'
    }
    // Assign all Java system properties from
    // the command line to the JavaExec task.
    systemProperties System.properties
}

task startInfra(type: Exec) {
    commandLine 'docker-compose', 'up', '-d'
}

task stopInfra(type: Exec) {
    commandLine 'docker-compose', 'down'
}